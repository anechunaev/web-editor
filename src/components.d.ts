/**
* This is an autogenerated file created by the Stencil compiler.
* It contains typing information for all components that exist in this project.
*/
/* tslint:disable */

import '@stencil/core';




export namespace Components {

  interface EditorPanel {
    'title': string;
  }
  interface EditorPanelAttributes extends StencilHTMLAttributes {
    'title'?: string;
  }

  interface LayoutScrollable {
    'axis': "x" | "y" | "xy";
  }
  interface LayoutScrollableAttributes extends StencilHTMLAttributes {
    'axis'?: "x" | "y" | "xy";
  }

  interface LayoutSplitHorizontal {
    'onSizeChange': (size: number, delta: number) => void;
    'resizible': "top" | "bottom";
  }
  interface LayoutSplitHorizontalAttributes extends StencilHTMLAttributes {
    'onSizeChange'?: (size: number, delta: number) => void;
    'resizible'?: "top" | "bottom";
  }

  interface LayoutSplitVertical {
    'onSizeChange': (size: number, delta: number) => void;
    'resizible': "left" | "right";
  }
  interface LayoutSplitVerticalAttributes extends StencilHTMLAttributes {
    'onSizeChange'?: (size: number, delta: number) => void;
    'resizible'?: "left" | "right";
  }

  interface LayoutSplit {
    'direction': "vertical" | "horizontal";
  }
  interface LayoutSplitAttributes extends StencilHTMLAttributes {
    'direction'?: "vertical" | "horizontal";
  }

  interface LayoutTest {}
  interface LayoutTestAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'EditorPanel': Components.EditorPanel;
    'LayoutScrollable': Components.LayoutScrollable;
    'LayoutSplitHorizontal': Components.LayoutSplitHorizontal;
    'LayoutSplitVertical': Components.LayoutSplitVertical;
    'LayoutSplit': Components.LayoutSplit;
    'LayoutTest': Components.LayoutTest;
  }

  interface StencilIntrinsicElements {
    'editor-panel': Components.EditorPanelAttributes;
    'layout-scrollable': Components.LayoutScrollableAttributes;
    'layout-split-horizontal': Components.LayoutSplitHorizontalAttributes;
    'layout-split-vertical': Components.LayoutSplitVerticalAttributes;
    'layout-split': Components.LayoutSplitAttributes;
    'layout-test': Components.LayoutTestAttributes;
  }


  interface HTMLEditorPanelElement extends Components.EditorPanel, HTMLStencilElement {}
  var HTMLEditorPanelElement: {
    prototype: HTMLEditorPanelElement;
    new (): HTMLEditorPanelElement;
  };

  interface HTMLLayoutScrollableElement extends Components.LayoutScrollable, HTMLStencilElement {}
  var HTMLLayoutScrollableElement: {
    prototype: HTMLLayoutScrollableElement;
    new (): HTMLLayoutScrollableElement;
  };

  interface HTMLLayoutSplitHorizontalElement extends Components.LayoutSplitHorizontal, HTMLStencilElement {}
  var HTMLLayoutSplitHorizontalElement: {
    prototype: HTMLLayoutSplitHorizontalElement;
    new (): HTMLLayoutSplitHorizontalElement;
  };

  interface HTMLLayoutSplitVerticalElement extends Components.LayoutSplitVertical, HTMLStencilElement {}
  var HTMLLayoutSplitVerticalElement: {
    prototype: HTMLLayoutSplitVerticalElement;
    new (): HTMLLayoutSplitVerticalElement;
  };

  interface HTMLLayoutSplitElement extends Components.LayoutSplit, HTMLStencilElement {}
  var HTMLLayoutSplitElement: {
    prototype: HTMLLayoutSplitElement;
    new (): HTMLLayoutSplitElement;
  };

  interface HTMLLayoutTestElement extends Components.LayoutTest, HTMLStencilElement {}
  var HTMLLayoutTestElement: {
    prototype: HTMLLayoutTestElement;
    new (): HTMLLayoutTestElement;
  };

  interface HTMLElementTagNameMap {
    'editor-panel': HTMLEditorPanelElement
    'layout-scrollable': HTMLLayoutScrollableElement
    'layout-split-horizontal': HTMLLayoutSplitHorizontalElement
    'layout-split-vertical': HTMLLayoutSplitVerticalElement
    'layout-split': HTMLLayoutSplitElement
    'layout-test': HTMLLayoutTestElement
  }

  interface ElementTagNameMap {
    'editor-panel': HTMLEditorPanelElement;
    'layout-scrollable': HTMLLayoutScrollableElement;
    'layout-split-horizontal': HTMLLayoutSplitHorizontalElement;
    'layout-split-vertical': HTMLLayoutSplitVerticalElement;
    'layout-split': HTMLLayoutSplitElement;
    'layout-test': HTMLLayoutTestElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
